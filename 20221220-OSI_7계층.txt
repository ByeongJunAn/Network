= 브라우저 광고차단 앱

크롬이나 엣지(크롬) => ublock origin

= OSI 7계층, TCP/IP 4계층

L1: 물리계층 (Physical Layer)
 (전송 매체: LAN선, 무선 신호(WIFI, LTE), 광케이블)
 전기, 기계적 특성과 같은 물리적인 특징을 규격화
 bit 신호 전송
 특징: 연결만 되면 모든 신호를 연결된 곳에 보냄
       (flooding)
       위와 같은 이유로 1계층로만 구성된 네트워크는
       원하는 시간에 원하는 DATA를 보내지 못하고 
       대기하는 시간이 길어지고 대기 시간이 길어지다보면
       DATA을 취소후 다시 보내야 하는 문제가 발생함
       특히, 연결된 장비가 많아지면 더욱 심해짐
       collision domain (충돌영역)


L2: 데이터링크계층 (Data Link Layer)
 L2부터 시스템 내부 (LAN 카드 L2의 대표적인 장치)
 시스템 내부의 DATA를 L1 계층으로 보내는 역할
 또는 L1 계층에서 받은 것을 시스템 내부의 DATA로 보내는 역할 
 L2의 DATA 단위를 Frame이라고 부르기 때문에
 Frame을 bit로 변환 후 전송매체로 전달 또는 bit 신호를 Frame로 변환 후 시스템으로 전달

 특징: L1계층의 flooding 문제점을 해결하기 위해 브릿지 장비를 사용하기 시작함

브릿지는 CPU+RAM등이 포함되고 운영체제를 통해 L2 주소를 학습하고 L2 주소를 통해 제어를 하기 시작
L2 주소: 물리주소 -> ethernet에서 MAC 주소라고 이야기함

브릿지가 충돌영역을 분할해주고 스위치라는 장비는 hub의 port마다 브릿지를 달아준 장비라고 이해하면 됨

브릿지와 스위치는 CPU+RAM이 있고 운영체제도 존재함 즉, 하나의 컴퓨터(시스템)

L2 계층의 문제점은 routing -> destination IP를 보고 찾아갈 수 있도록 한 것 즉, 다른 네트워크로 갈 수 있게 만들어 주는 것은 IP이고 IP는 L3계층에서 사용되는 프로토콜로 L2 계층은 routing이 되지 않는다는 이야기이며 이말은 같은 네트워크에서만 통신이 가능하다는 이야기 임

L2 장비들은 자기 주소가 아닌 경우 자기가 가긴 table을 보고 forwarding을 시킴 즉, 자기 주소가 아니더라도 우선은 받아 본다는 이야기로 이런 역할을 하는 포트들을 switched port라고 부름

시스템에 연결된 LAN 카드들은 L2 장비에 속하지만 위에 있는 switched port가 아닌 routed port로 분류가 되고 routed port는 자기주소가 아니면 drop

L2의 port는 switched port와 routed port가 존재함
           = IP입력이 안됨   ==== IP 입력이 가능

* ip 입력이 가능하다는 이야기는 IP주소와 MAC주소가 1:1로 mapping이 된다는 이야기

* ip 입력이 안된다는 이야기는 MAC주소로만 통신이 가능하다는 이야기

L2의 문제점: 브로드캐스트(Broadcast) 통신이 오면 L1처럼 작동 즉, 충돌영역이 되버림
BUM frame이 오면 충돌영역이 되어 버림

Broadcast
Unknown Unicast(L2장비에 MAC 주소 학습 안된 Unicast)
Multicast
 
위의 Broadcast를 차단시키는 장비가 필요하고 MAC주소가 아닌 논리주소를 활용해 다른 네트워크로 이동을 시킬 수 있도록 만든 계층이 L3계층이며 이때 사용하는 IP(Internet Protocol) IP에서 사용하는 주소가 IP address


L3: 네트워크 계층 (Network Layer)
 논리 주소를 지정
 논리 주소 현재 사용하고 있는 것이 IP의 IP주소
 IP 주소를 지정하고 Packet의 도착지 IP 주소를 확인하고 Routing table과 비교 후 출구를 지정해 도착지를 찾아가는 Routing을 하는 계층
 특징: L2의 브로드캐스트를 차단하고 IP 주소를 통해 다른 네트워크로 갈 수 있도록 해준 계층

IPv4가 사용하는 통신 방법
Unicast =  1:1 통신
Multicast = 1:n 통신
Broadcast = 1:해당네트워크전체 통신

= IP 주소

비교연산 자체가 시간이 걸리는 행위

- Classful IP address
IP bit를 보고 A class, B class, C class, D class, E class
A class 첫번째bit가 0
B class 첫번째bit가 1 두번째 bit가 0
C class 첫번째bit가 1 두번째 bit가 1 세번째 0
D class 첫번째bit가 1 두번째 bit가 1 세번째 1 네번째 0
나머지는 전부 E class

A class는 첫번째 8개 bit가 동일하면 같은 NW, 다르면 다른 NW
B class는 첫번째 16개 bit가 동일하면 같은 NW, 다른면 다른 NW
C class는 첫번째 24개 bit가 동일하면 같은 NW, 다르면 다른 NW

D class는 IP주소 1개를 서비스 1개와 mapping을 시키고 멀티캐스트용 IP로 사용하기로 약속
E class는 예비용으로 사용 안함


사람이 사용하기 쉽도록 하기 위해 8bit = 1Byte -> 옥텟 씩 묶어서 4개의 필드로 나타내기로 약속 8bit을 10진수로 변환하기로 함 필드 사이는 .을 이용해 구분

123.123.123.123

0000 0000 => 0
0000 0001 => 1
0000 0010 => 2
0000 0011 => 3
~
1111 1110 => 254
1111 1111 => 255

A class
0000 0000.0000 0000.0000 0000.0000 0000 => 0.0.0.0
~
0111 1111.1111 1111.1111 1111.1111 1111 => 127.255.255.255


0000 0000.0000 0000.0000 0000.0000 0000 => IP
~
0000 0000.1111 1111.1111 1111.1111 1111
1111 1111.0000 0000.0000 0000.0000 0000 => subnet mask
==========================================
0000 0000.0000 0000.0000 0000.0000 0000 => 네트워크주소


0100 0010.0000 0000.0000 0000.0000 0000
~
0100 0010.1111 1111.1111 1111.1111 1111
1111 1111.0000 0000.0000 0000.0000 0000 => subnet mask

0100 0010.0000 0000.0000 0000.0000 0000 => 네트워크주소





B class
1000 0000.0000 0000.0000 0000.0000 0000 => 128.0.0.0
~
1011 1111.1111 1111.1111 1111.1111 1111 => 191.255.255.255
1111 1111.1111 1111.0000 0000.0000 0000 => subnet mask
255.255.0.0

C class
1100 0000.0000 0000.0000 0000.0000 0000 => 192.0.0.0
~
1101 1111.1111 1111.1111 1111.1111 1111 => 223.255.255.255

1111 1111.1111 1111.1111 1111.0000 0000 => sunbnet mask
255.255.255.0
  

- Classless IP address

각 class별 같은 네트워크의 정의를 무시하고 새로운 정의를 이용해 C class를 A class로 할 수도 있고 B class를 C Class로 만들 수 있는 등 Class를 따지지 않고 사용하는 주소 체계

net mask를 이용해 같은 네트워크 다른 네트워크인지를 학인
=> 큰 네트워크를 작은 네트워크로 쪼개서 사용할 때 subnet mask라고 부르지만 현재는 net mask라는 말보다는 subnet mask라는 말로 많이 부르고 있음

같은 네트워크는 bit 1로 표시 (네트워크 ID를 표시)
해당 네트워크의 host들은 bit 0으로 표시 (Host ID를 표시)
제한 조건 연속된 1이 와야 하고 0으로 시작하면 모두 0이어야 함
* 중간에 0이 삽입되면 안됨 => CIDR 표기법 /24 /8 /16

192.168.10.0/24
255.255.255.0

mask(filtering) => and 연산 => 곱하기 연산
IP	netmask  network 주소가 추출이 됨
A 	B 	F
0 	0 	0
1 	0 	0
0 	1 	0
1 	1 	1




L3의 역할: IP주소지정과 Routing(목적지를 찾아가는 것)

IP주소 입력 시 각각의 역할

IP주소: 네트워크 ID + Host ID로 구분된 IP주소의 Host ID 입력

서브넷마스크: 네트워크 ID와 Host ID의 기준점

게이트웨이: 같은 네트워크 ID를 가진 네트워크는 사용할 필요가 없음, 다른 네트워크 ID를 가진 (서브넷마스크를 통해 알 수 있음) IP주소를 입력한 경우 해당 IP주소의 경로를 알고 있는 장비의 인터페이스 주소를 입력

DNS주소: IP주소가 Internet Protocol에서 사용되는 Host의 주소로 도메인 네임(영역 이름 : naver.com, duam.net, keduit.com 도메인이름)으로된 host들을 (www.naver.com, www.daum.net, mail.keduit.com) IP주소로 변환을 해주는 서버를 지정



L4: 전송 계층 (Transport Layer)
 응용계층 프로그램이 만든 DATA를 전송하기 위해 전송계층에서 작은 크기로 분할해서 segment로 만들고 분할된 segment를 다시 재조립해 원래의 DATA로 변환하는 역할하는 계층

응용계층프로그램의 port를 지정
즉, port로 응용계층 프로그램을 구분한다는 것과 같음

netstat -ano

Listen : 해당 포트로 통신할 준비가 되어 있다 언제든지 와라
         (서버에서 가장 많이 보여지는 상태)

Established : 해당 포트로 현재 통신 중에 있다




L5: 세션 계층 (Session Layer)
 응용프로그램에 접속한 클라이언트 응용 프로그램의 접속관리

L6: 표현 계층 (Presentation Layer)
 응용프로그램이 사용하는 확장자, 코드, 압축, 암호화등을 할 수 있도록 하는 계층

L7: 응용계층 (Application Layer)
 응용프로그램을 이야기하며 클라이언트에 입장에서는 특정 응용 프로그램을 사용해 시스템의 인터페이스를 통해 DATA를 생성하거나 요청, 서버 입장에서는 해당 응용프로그램으로 클라이언트가 요청한 동작을 수행 후 결과를 DATA로 만들어 전송


응용계층 프로그램


= 서버와 클라이언트

서버: 서비스를 제공
클라이언트: 서비스를 사용

IT 쪽의 관리자

CE: Custormer Engineer => 고객 사용하는 것 불편 해결
NE: Network Engineer => 도로를 만드는 사람
SE: Syetem Engineer => 건물 만드는 사람
DEV: Develop Engineer => 건물에 인테리어 또는 설비를 만드는 사람









 

 

